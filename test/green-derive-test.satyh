@require: stdja
@require: math
@import: ../src/green-derive
@import: ../src/dsl

module GreenDeriveTest : sig
    val test1 : math
    val test2 : math
    val test3 : math
    val test4 : math
    val test5 : math
    val test6 : math
    val test7 : math
end = struct
    open GreenDerive
    open GreenDeriveDSL

    let test1 = ${
        \proven!(
            assume(${A})
        )
    }

    let test2 = ${
        \proven!(
            derive (${A \wedge B})
        )
    }


    let test3 = ${
        \proven!(
            derive(${A \vee B})
            |> from [
                assume(${A});
            ]
        )
    }

    let test4 = ${
        \proven!(
            derive(${A})
            |> from [
                assume(${A \wedge B});
            ]
        )
    }

    let test5 = ${
        \proven!(
            derive(${A})
            |> from [
                derive(${A \wedge B})
                |> by {${\paren{1}}}
            ]
        )
    }

    let test6 = ${
        \proven!(
            derive(${B})
            |> from [
                derive(${A \vee B})
                |> by {${\paren{1}}}
                ;
                derive(${A \rightarrow \bot})
                |> by {${\paren{2}}}
            ]
        )
    }

        let test6 = ${
        \proven!(
            derive (${B})
            |> from [
                derive (${A \vee B})
                |> by {${\paren{1}}}
                ;
                derive (${A \rightarrow \bot})
                |> by{${\paren{2}}}
            ]
        )
    }
    
    let test7 = ${
        \proven!(
            derive(${B \vee C})
            |> by {${\vee}-intro}
            |> from [
                derive(${B})
                |> from [
                    derive (${A \vee B})
                    |> by {${\paren{1}}}
                    ;
                    derive (${A \rightarrow \bot})
                    |> by{${\paren{2}}}
                ]
            ]
        )
    }
end