@require: stdja
@require: math
@import: ../src/green-derive

module GreenDeriveTest : sig
    val test1 : math
    val test2 : math
    val test3 : math
    val test4 : math
    val test5 : math
    val test6 : math
    val test7 : math
end = struct
    open GreenDerive

    let test1 = ${
        \proven!(
            assume(${A})
        )
    }

    let test2 = ${
        \proven!(
            derive
            (${A \wedge B})
            [
            ]
        )
    }


    let test3 = ${
        \proven!(
            derive
            (${A \vee B})
            [
                assume(${A});
            ]
        )
    }

    let test4 = ${
        \proven!(
            derive
            (${A})
            [
                assume(${A \wedge B});
            ]
        )
    }

    let test5 = ${
        \proven!(
            derive
            (${A})
            [
                deriveBy{${\paren{1}}}
                (${A \wedge B})
                [];
            ]
        )
    }

    let test6 = ${
        \proven!(
            derive
            (${B})
            [
                deriveBy{${\paren{1}}}
                (${A \vee B})
                [];
                deriveBy{${\paren{2}}}
                (${A \rightarrow \bot})
                []
            ]
        )
    }

        let test6 = ${
        \proven!(
            derive
            (${B})
            [
                deriveBy{${\paren{1}}}
                (${A \vee B})
                [];
                deriveBy{${\paren{2}}}
                (${A \rightarrow \bot})
                []
            ]
        )
    }
    
    let test7 = ${
        \proven!(
            deriveBy{${\vee}-intro}
            (${B \vee C})
            [
                derive
                (${B})
                [
                    deriveBy{${\paren{1}}}
                    (${A \vee B})
                    [];
                    deriveBy{${\paren{2}}}
                    (${A \rightarrow \bot})
                    []
                ]
            ]
        )
    }
end